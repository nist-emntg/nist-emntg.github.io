{"name":"NIST Emerging & Mobile Network Technologies projects","tagline":"EMNTG's projects description page","body":"#What is this page about?\r\n\r\nThis page presents some research artifacts that were spawn from the Secure\r\nSmargrid project with the Emerging & Mobile Network Technologies Group (EMNTG)\r\nat NIST. We believe that sharing our code on GitHub we will make it more\r\naccessible and foster more contribution. Because the code derives from our\r\nresearch, it should be considered as experimental and is sometimes incomplete.\r\nAlso, some contribution are meant to be used in conjunction.\r\n\r\nPlease note that this page is not the official page of the Emerging & Mobile\r\nNetwork Technologies group at NIST. It only presents a small subset of our\r\ngroup's contributions and efforts. People interested to learn more about our\r\ngroup can go on [our official website](http://www.nist.gov/itl/antd/emntg/index.cfm).\r\n\r\n#Projects\r\n\r\n## IEEE 802.15.4 networks emulation\r\n\r\n### [wiredto154](https://github.com/nist-emntg/wiredto154)\r\n\r\n*A IEEE 802.15.4 PHY layer emulator over Ethernet links*\r\n\r\nThis is an emulator for IEEE 802.15.4 networks over Ethernet links. The emulator\r\ntakes a node map as an input and computes for each packets it receives which\r\nnodes in the simulation should actually receive it. Frame are encapsulated within UDP\r\nmessages. The emulator is optimized for speed and tries to provide real time\r\nemulation of IEEE 802.15.4 networks.\r\n\r\nThe emulator currently only works with modified Contiki \"native\" nodes.\r\nConnector for Linux nodes is possible but has not be written yet.\r\n\r\n### [wiredto154-logger](https://github.com/nist-emntg/wiredto154-logger)\r\n\r\n*Logging tool for wiredto154 simulations*\r\n\r\nNodes participating in a wiredto154 can use the emulator's facility to report\r\nlogging message. The logger will read them in real time. The logger also\r\ncontains a real time viewer that indicates the status of the nodes.\r\n\r\n## Implementation of the RPL routing protocol (RFC 6550)\r\n\r\n### [simpleRPL](https://github.com/nist-emntg/simpleRPL)\r\n\r\n*A linux-based implementation of the Routing Protocol for Low-Power and Lossy Networks (RPL)*\r\n\r\nThis is an implementation of the Routing Protocol for Low-Power and Lossy\r\nNetworks. This routing protocol has been designed for low power nodes with\r\nlow memory capacity.\r\n\r\nThis implementation can operate across multiple interfaces (where links can be\r\nof different type), which makes it useful for bridge-like devices.\r\n\r\n### [Routing](https://github.com/nist-emntg/Routing)\r\n\r\n*a libnl-route binding for python*\r\n\r\nOne of the support library of simpleRPL. It is a python wrapper for the libnl\r\n(a netlink library). It enables the python code to add and remove networks\r\nroutes, addresses, etc.\r\n\r\n### [RplIcmp](https://github.com/nist-emntg/RplIcmp)\r\n\r\n*A python module for handling ICMP messaging for the RPL protocol*\r\n\r\nOne of the support library for simpleRPL. It is a python wrapper for sending\r\nand receiving ICMPv6 messages.\r\n\r\n## Linux related code\r\n\r\n### [virtual-ieee802154-serial](https://github.com/nist-emntg/virtual-ieee802154-serial)\r\n\r\n*Virtual tunnel interface for the IEEE 802.15.4 serial protocol*\r\n\r\nCertain IEEE 802.15.4 devices, like the RedBee Econotag, present a serial-like\r\ninterface for the Linux kernel to connect to.  This software provides a virtual\r\nserial interface, so that the Linux kernel can setup a virtual IEEE 802.15.4\r\ndevice on top of it. Once set up, all the traffic that go though this interface\r\nis encapsulated into UDP packets.\r\n\r\n### [linux802154-regression-tests](https://github.com/nist-emntg/linux802154-regression-tests)\r\n\r\n*Regression tests for the Linux IEEE 802.15.4 and 6LoWPAN stack*\r\n\r\nThis basic regression tests suite ensures that new patches within the Linux\r\nkernel do not introduce regressions on basic features IEEE 802.15.4/6LoWPAN features.\r\n\r\n## Works related to the RedBee Econotag\r\n\r\nFor our testbed, we use the RedBee Econotag. We wrote some code in order to better manage the device.\r\n\r\n### [serialreadts](https://github.com/nist-emntg/serialreadts)\r\n\r\n*Serial port reading with timestamp information (serialreadts)*\r\n\r\nWhen reading logs from the Econotag serial interface, it is sometimes\r\nuseful to see exactly when a message occurred. This small tool append a\r\ntimestamp at the beginning of each new lines thus making reading logs very\r\neasy.\r\n\r\n### [linux802154-serialdev](https://github.com/nist-emntg/linux802154-serialdev)\r\n\r\n*Friendly fork of Mariano Alvira's linux serial driver firmware for the Redbee Econotag*\r\n\r\nA slightly modified version of the RedBee Econotag firmware that works along\r\na modified IEEE 802.15.4 serial driver for Linux. It activates extra feature,\r\nsuch as the auto-acknowledgment.\r\n\r\n## Contiki related code\r\n\r\n## [ecc-light-certificate](https://github.com/nist-emntg/ecc-light-certificate)\r\n\r\n*A simple ECC certificate library*\r\n\r\nA small certificate library for sensor networks. This library aims to minimize\r\nthe RAM and ROM footprint as well as the energy consumption. It uses a\r\nnon-standard but very compact and lightweight certificate format.\r\n\r\n#License\r\n\r\nUnless explicitly stated, all the software referenced on this page follow the\r\nlicense below:\r\n\r\n<em>\r\nConditions Of Use\r\n</em>\r\n\r\n<em>\r\nThis software was developed by employees of the National Institute of\r\nStandards and Technology (NIST), and others.\r\nThis software has been contributed to the public domain.\r\nPursuant to title 15 United States Code Section 105, works of NIST\r\nemployees are not subject to copyright protection in the United States\r\nand are considered to be in the public domain.\r\nAs a result, a formal license is not needed to use this software.\r\n</em>\r\n\r\n<em>\r\nThis software is provided \"AS IS.\"\r\nNIST MAKES NO WARRANTY OF ANY KIND, EXPRESS, IMPLIED\r\nOR STATUTORY, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTY OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT\r\nAND DATA ACCURACY. NIST does not warrant or make any representations\r\nregarding the use of the software or the results thereof, including but\r\nnot limited to the correctness, accuracy, reliability or usefulness of\r\nthis software.\r\n</em>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}